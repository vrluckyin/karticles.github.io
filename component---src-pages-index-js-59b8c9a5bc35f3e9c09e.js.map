{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","_ref5","data","console","log","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","css","_ref","_ref2","allMarkdownRemark","totalCount","edges","map","_ref6","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","frontmatter","path","_ref3","rhythm","title","_ref4","date","excerpt","query","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","gatsby__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_2___default","a","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","site","siteMetadata","meta","name","content","lang","_public_static_d_610245948_json__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","d","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-59b8c9a5bc35f3e9c09e.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { css } from \"@emotion/core\"\r\nimport { rhythm } from \"../utils/typography\"\r\nimport Layout from \"../components/layout\"\r\n\r\nexport default ({ data }) => {\r\n  console.log(data)\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <h1\r\n          css={css`\r\n            display: inline;\r\n            border-bottom: 0px solid;\r\n          `}\r\n        >\r\n          Articles\r\n        </h1>\r\n        <h4\r\n          css={css`\r\n            display: inline;\r\n            border-bottom: 0px solid;\r\n            font-size:13px;\r\n            margin-left:5px;\r\n          `}\r\n        >\r\n          The Knowledge Book\r\n        </h4>\r\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\r\n        {data.allMarkdownRemark.edges.map(({ node }) => (\r\n          <div key={node.id}>\r\n            <Link \r\n                to={node.frontmatter.path}\r\n                css={css`\r\n                        text-decoration:none;\r\n                        color:inherit\r\n                `\r\n                }\r\n            >\r\n           \r\n                <h3\r\n                css={css`\r\n                    margin-bottom: ${rhythm(1 / 4)};\r\n                `}\r\n                >\r\n                {node.frontmatter.title}{\" \"}\r\n                <span\r\n                    css={css`\r\n                    color: #bbb;\r\n                    `}\r\n                >\r\n                    â€” {node.frontmatter.date}\r\n                </span>\r\n                </h3>\r\n                <p>{node.excerpt}</p>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark (sort: { fields: [frontmatter___date], order: DESC }){\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            path\r\n            alternatePaths\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\r\nimport Helmet from 'react-helmet'\r\nimport {css} from \"@emotion/core\"\r\nimport {StaticQuery, Link, graphql} from \"gatsby\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nexport default ({ children }) =>(\r\n    <StaticQuery \r\n        query={ graphql`\r\n            query{\r\n                site{\r\n                    siteMetadata{\r\n                        title\r\n                    }\r\n                }\r\n            }        \r\n        `\r\n        }\r\n\r\n        render={data=>(\r\n            <>\r\n                <Helmet\r\n                        title={data.site.siteMetadata.title}\r\n                        meta={[\r\n                            { name: 'description', content: 'Articles Collection' },\r\n                            { name: 'keywords', content: 'Articles, blog' },\r\n                        ]}\r\n                        >\r\n                        <html lang=\"en\" />\r\n                </Helmet>\r\n                <div \r\n                    css={ css`\r\n                            margin:0 auto;\r\n                            max-width: 700px;\r\n                            padding: ${rhythm(2)};\r\n                            padding-top:${rhythm(1.5)};\r\n                        `}\r\n                >\r\n                    <Link to={`/`}>\r\n                        <h3\r\n                            css={css`\r\n                                    margin-bottom:${rhythm(2)};\r\n                                    display:inline-block;\r\n                                    font-style:normal;\r\n                                `}\r\n                        >\r\n                            {data.site.siteMetadata.title}\r\n                        </h3>\r\n                    </Link>\r\n                    <Link\r\n                        to={`/about`}\r\n                        css={css `\r\n                                float:right;\r\n                            `}\r\n                    >\r\n                        About\r\n                    </Link>\r\n                    <Link\r\n                        to={`/tags`}\r\n                        css={css`\r\n                                float:right;\r\n                                margin-right:5px;\r\n                            `}\r\n                    >\r\n                        Tags\r\n                    </Link>\r\n                    <Link\r\n                        to={`/categories`}\r\n                        css={css`\r\n                                float:right;\r\n                                margin-right:5px;\r\n                            `}\r\n                    >\r\n                        Categories\r\n                    </Link>\r\n                    {children}\r\n                </div>\r\n                </>\r\n        )}\r\n    \r\n    />\r\n)","import Typography from \"typography\"\r\nimport kirkhamTheme from \"typography-theme-kirkham\"\r\n\r\nconst typography = new Typography(kirkhamTheme)\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}