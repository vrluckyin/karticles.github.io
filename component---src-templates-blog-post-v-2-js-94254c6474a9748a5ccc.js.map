{"version":3,"sources":["webpack:///./src/templates/blog-post-v2.js"],"names":["__webpack_exports__","_ref","data","console","log","markdownRemark","blog","blogAlternate","frontmatter","html","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","className","title","date","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"yJAGeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACdC,QAAQC,IAAIF,GACd,IAAOG,EAAkBH,EAAKI,MAAQJ,EAAKK,cACnCC,EAAsBH,EAAtBG,YAAaC,EAASJ,EAATI,KACrB,OACEC,OAAAC,EAAA,EAAAD,CAAA,OAAKE,UAAU,uBACbF,OAAAC,EAAA,EAAAD,CAAA,OAAKE,UAAU,aACbF,OAAAC,EAAA,EAAAD,CAAA,UAAKF,EAAYK,OACjBH,OAAAC,EAAA,EAAAD,CAAA,UAAKF,EAAYM,MACjBJ,OAAAC,EAAA,EAAAD,CAAA,OACEE,UAAU,oBACVG,wBAAyB,CAAEC,OAAQP,QAOtC,IAAMQ,EAAS","file":"component---src-templates-blog-post-v-2-js-94254c6474a9748a5ccc.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nexport default ({ data }) => {\r\n    console.log(data);\r\n  const  markdownRemark  = data.blog || data.blogAlternate // data.markdownRemark holds our post data\r\n  const { frontmatter, html } = markdownRemark\r\n  return (\r\n    <div className=\"blog-post-container\">\r\n      <div className=\"blog-post\">\r\n        <h1>{frontmatter.title}</h1>\r\n        <h2>{frontmatter.date}</h2>\r\n        <div\r\n          className=\"blog-post-content\"\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    blog: markdownRemark (frontmatter: { path: { eq: $path } }){\r\n                    html\r\n                    frontmatter {\r\n                            date(formatString: \"MMMM DD, YYYY\")\r\n                            path\r\n                            title\r\n                            alternatePaths\r\n                        }\r\n                    }\r\n  blogAlternate:markdownRemark (frontmatter: { alternatePaths: { in: [$path]}}){\r\n                    html\r\n                    frontmatter {\r\n                            date(formatString: \"MMMM DD, YYYY\")\r\n                            path\r\n                            title\r\n                            alternatePaths\r\n                        }\r\n                    }\r\n  }\r\n`\r\n/*export const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        path\r\n        title\r\n        alternatePaths\r\n      }\r\n    }\r\n  }\r\n`\r\n*/"],"sourceRoot":""}