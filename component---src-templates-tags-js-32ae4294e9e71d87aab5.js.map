{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Tags","_ref","pageContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","map","_ref2","_node$frontmatter","node","frontmatter","path","title","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","PropTypes","shape","string","isRequired","number","arrayOf","pageQuery","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","query","render","children","graphql","Error","propTypes","object","func","__webpack_exports__","_ref4","gatsby__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_2___default","a","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","site","siteMetadata","meta","name","content","lang","css","rhythm","_ref3","_public_static_d_610245948_json__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","d","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json"],"mappings":"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","file":"component---src-templates-tags-js-32ae4294e9e71d87aab5.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n\r\nconst Tags = ({ pageContext, data }) =>{\r\n    const { tag } = pageContext;\r\n    const { edges, totalCount } = data.allMarkdownRemark\r\n    const tagHeader = `${totalCount} post${\r\n        totalCount === 1 ? \"\" : \"s\"\r\n    } tagged with \"${tag}\"`\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <h1>{tagHeader}</h1>\r\n                <ul>\r\n                    {edges.map(({ node })=>{\r\n                        const { path, title } = node.frontmatter\r\n                        return (\r\n                            <li key={path}>\r\n                                <Link to={path}>{title}</Link>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                {\r\n                /*\r\n                This links to a page that does not yet exist.\r\n                We'll come back to it!\r\n                */  \r\n                }\r\n                <Link to=\"/tags\">All tags</Link>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nTags.PropTypes = {\r\n    pageContext: PropTypes.shape({\r\n        tag:PropTypes.string.isRequired,\r\n    }),\r\n    data:PropTypes.shape({\r\n        allMarkdownRemark:PropTypes.shape({\r\n            totalCount:PropTypes.number.isRequired,\r\n            edges:PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    node:PropTypes.shape({\r\n                        frontmatter:PropTypes.shape({\r\n                            path:PropTypes.string.isRequired,\r\n                            title:PropTypes.string.isRequired\r\n                        }),\r\n                    }),\r\n                }).isRequired\r\n            ),\r\n        }),\r\n    }),\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            path\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\r\nimport Helmet from 'react-helmet'\r\nimport {css} from \"@emotion/core\"\r\nimport {StaticQuery, Link, graphql} from \"gatsby\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nexport default ({ children }) =>(\r\n    <StaticQuery \r\n        query={ graphql`\r\n            query{\r\n                site{\r\n                    siteMetadata{\r\n                        title\r\n                    }\r\n                }\r\n            }        \r\n        `\r\n        }\r\n\r\n        render={data=>(\r\n            <>\r\n                <Helmet\r\n                        title={data.site.siteMetadata.title}\r\n                        meta={[\r\n                            { name: 'description', content: 'Articles Collection' },\r\n                            { name: 'keywords', content: 'Articles, blog' },\r\n                        ]}\r\n                        >\r\n                        <html lang=\"en\" />\r\n                </Helmet>\r\n                <div \r\n                    css={ css`\r\n                            margin:0 auto;\r\n                            max-width: 700px;\r\n                            padding: ${rhythm(2)};\r\n                            padding-top:${rhythm(1.5)};\r\n                        `}\r\n                >\r\n                    <Link to={`/`}>\r\n                        <h3\r\n                            css={css`\r\n                                    margin-bottom:${rhythm(2)};\r\n                                    display:inline-block;\r\n                                    font-style:normal;\r\n                                `}\r\n                        >\r\n                            {data.site.siteMetadata.title}\r\n                        </h3>\r\n                    </Link>\r\n                    <Link\r\n                        to={`/about`}\r\n                        css={css `\r\n                                float:right;\r\n                            `}\r\n                    >\r\n                        About\r\n                    </Link>\r\n                    <Link\r\n                        to={`/tags`}\r\n                        css={css`\r\n                                float:right;\r\n                                margin-right:5px;\r\n                            `}\r\n                    >\r\n                        Tags\r\n                    </Link>\r\n                    <Link\r\n                        to={`/categories`}\r\n                        css={css`\r\n                                float:right;\r\n                                margin-right:5px;\r\n                            `}\r\n                    >\r\n                        Categories\r\n                    </Link>\r\n                    {children}\r\n                </div>\r\n                </>\r\n        )}\r\n    \r\n    />\r\n)","import Typography from \"typography\"\r\nimport kirkhamTheme from \"typography-theme-kirkham\"\r\n\r\nconst typography = new Typography(kirkhamTheme)\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}