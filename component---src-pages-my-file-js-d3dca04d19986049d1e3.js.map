{"version":3,"sources":["webpack:///./src/pages/my-file.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","_ref","data","console","log","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","allFile","edges","map","_ref2","index","node","key","relativePath","prettySize","extension","birthTime","query","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","__webpack_require__","d","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","gatsby__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_2___default","a","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","site","siteMetadata","meta","name","content","lang","css","to","_public_static_d_610245948_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-pages-my-file-js-d3dca04d19986049d1e3.js","sourcesContent":["import React from    \"react\"\r\nimport {graphql} from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n\r\nexport default ({ data }) =>{\r\n    console.log(data)\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <h1>My Site's Files</h1>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                relativePath\r\n                            </th>\r\n                            <th>\r\n                                prettySize\r\n                            </th>\r\n                            <th>\r\n                                extension\r\n                            </th>\r\n                            <th>\r\n                                birthTime\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.allFile.edges.map(({node},index)=>(\r\n                            <tr key={index}>\r\n                                <td>{node.relativePath}</td>\r\n                                <td>{node.prettySize}</td>\r\n                                <td>{node.extension}</td>\r\n                                <td>{node.birthTime}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const query = graphql`\r\n    query{\r\n        allFile {\r\n            edges {\r\n            node {\r\n                relativePath\r\n                prettySize\r\n                extension\r\n                birthTime(fromNow:true)\r\n            }\r\n            }\r\n        }\t\r\n    }\r\n`\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from \"typography\"\r\nimport kirkhamTheme from \"typography-theme-kirkham\"\r\n\r\nconst typography = new Typography(kirkhamTheme)\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\n","import React from \"react\"\r\nimport Helmet from 'react-helmet'\r\nimport {css} from \"@emotion/core\"\r\nimport {StaticQuery, Link, graphql} from \"gatsby\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nexport default ({ children }) =>(\r\n    <StaticQuery \r\n        query={ graphql`\r\n            query{\r\n                site{\r\n                    siteMetadata{\r\n                        title\r\n                    }\r\n                }\r\n            }        \r\n        `\r\n        }\r\n\r\n        render={data=>(\r\n            <>\r\n                <Helmet\r\n                        title={data.site.siteMetadata.title}\r\n                        meta={[\r\n                            { name: 'description', content: 'Sample' },\r\n                            { name: 'keywords', content: 'sample, something' },\r\n                        ]}\r\n                        >\r\n                        <html lang=\"en\" />\r\n                </Helmet>\r\n                <div \r\n                    css={ css`\r\n                            margin:0 auto;\r\n                            max-width: 700px;\r\n                            padding: ${rhythm(2)};\r\n                            padding-top:${rhythm(1.5)};\r\n                        `}\r\n                >\r\n                    <Link to={`/`}>\r\n                        <h3\r\n                            css={css`\r\n                                    margin-bottom:${rhythm(2)};\r\n                                    display:inline-block;\r\n                                    font-style:normal;\r\n                                `}\r\n                        >\r\n                            {data.site.siteMetadata.title}\r\n                        </h3>\r\n                    </Link>\r\n                    <Link\r\n                        to={`/about`}\r\n                        css={css `\r\n                                float:right;\r\n                            `}\r\n                    >\r\n                        About\r\n                    </Link>\r\n                    {children}\r\n                </div>\r\n                </>\r\n        )}\r\n    \r\n    />\r\n)","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}