{"version":3,"sources":["webpack:///./src/components/Metatags.js","webpack:///./src/templates/blog-post-v2.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Metatags","props","Object","core_browser_esm","Helmet_default","a","title","meta","name","content","description","property","pathname","url","thumbnail","lang","__webpack_exports__","_ref","data","console","log","markdownRemark","blog","blogAlternate","frontmatter","html","layout","components_Metatags","className","date","dangerouslySetInnerHTML","__html","pageQuery","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","query","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","_ref4","gatsby__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_2___default","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","site","siteMetadata","css","rhythm","to","_ref2","_ref3","_public_static_d_610245948_json__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","d","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-templates-blog-post-v-2-js-92331634bb6e88aecbd5.js","sourcesContent":["import React from 'react';\r\nimport Helmet from 'react-helmet'\r\nfunction Metatags(props) {\r\n    return (\r\n        <Helmet\r\n            title={props.title}\r\n            meta={[\r\n                { name: 'title', content: props.title },\r\n                { name: 'description', content: props.description },\r\n                {\r\n                    property: 'og:title',\r\n                    content: props.title,\r\n                },\r\n                {\r\n                    property: 'og:url',\r\n                    content: props.pathname ? props.url + props.pathname : props.url,\r\n                },\r\n                {\r\n                    property: 'og:image',\r\n                    content: props.thumbnail && props.thumbnail,\r\n                },\r\n                {\r\n                    property: 'og:image:secure_url',\r\n                    content: props.thumbnail && props.thumbnail,\r\n                },\r\n                {\r\n                    property: 'og:description',\r\n                    content: props.description,\r\n                },\r\n                {\r\n                    property: 'og:image:width',\r\n                    content: '1200',\r\n                },\r\n                {\r\n                    property: 'og:image:height',\r\n                    content: '630',\r\n                },\r\n                {\r\n                    property: 'og:locale',\r\n                    content: 'en',\r\n                },\r\n                { name: 'twitter:card', content: 'summary_large_image' },\r\n                { name: 'twitter:title', content: props.title },\r\n                {\r\n                    name: 'twitter:description',\r\n                    content: props.description,\r\n                },\r\n                {\r\n                    name: 'twitter:image',\r\n                    content: props.thumbnail && props.thumbnail,\r\n                },\r\n                { property: 'og:type', content: 'website' },\r\n                { name: 'robots', content: 'index, follow' },\r\n                { name: 'twitter:creator', content: '@karticles' },\r\n                { property: 'og:site_name', content: 'karticles' }\r\n            ]}\r\n        >\r\n            <html lang=\"en\" />\r\n        </Helmet>\r\n    )\r\n}\r\nexport default Metatags;","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport Metatags from '../components/Metatags';\r\n\r\nexport default ({ data }) => {\r\n    console.log(data);\r\n  const  markdownRemark  = data.blog || data.blogAlternate // data.markdownRemark holds our post data\r\n  const { frontmatter, html } = markdownRemark\r\n  return (\r\n    <Layout>\r\n    <Metatags\r\n        title={frontmatter.title}\r\n    />\r\n        <div className=\"blog-post-container\">\r\n        <div className=\"blog-post\">\r\n            <h1>{frontmatter.title}</h1>\r\n            <h2>{frontmatter.date}</h2>\r\n            <div\r\n            className=\"blog-post-content\"\r\n            dangerouslySetInnerHTML={{ __html: html }}\r\n            />\r\n        </div>\r\n        </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    blog: markdownRemark (frontmatter: { path: { eq: $path } }){\r\n                    html\r\n                    frontmatter {\r\n                            date(formatString: \"MMMM DD, YYYY\")\r\n                            path\r\n                            title\r\n                            alternatePaths\r\n                        }\r\n                    }\r\n  blogAlternate:markdownRemark (frontmatter: { alternatePaths: { in: [$path]}}){\r\n                    html\r\n                    frontmatter {\r\n                            date(formatString: \"MMMM DD, YYYY\")\r\n                            path\r\n                            title\r\n                            alternatePaths\r\n                        }\r\n                    }\r\n  }\r\n`\r\n/*export const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        path\r\n        title\r\n        alternatePaths\r\n      }\r\n    }\r\n  }\r\n`\r\n*/","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\r\nimport Helmet from 'react-helmet'\r\nimport {css} from \"@emotion/core\"\r\nimport {StaticQuery, Link, graphql} from \"gatsby\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nexport default ({ children }) =>(\r\n    <StaticQuery \r\n        query={ graphql`\r\n            query{\r\n                site{\r\n                    siteMetadata{\r\n                        title\r\n                    }\r\n                }\r\n            }        \r\n        `\r\n        }\r\n\r\n        render={data=>(\r\n            <>\r\n                <Helmet\r\n                        title={data.site.siteMetadata.title}\r\n                        meta={[\r\n                            { name: 'description', content: 'Articles Collection' },\r\n                            { name: 'keywords', content: 'Articles, blog' },\r\n                        ]}\r\n                        >\r\n                        <html lang=\"en\" />\r\n                </Helmet>\r\n                <div \r\n                    css={ css`\r\n                            margin:0 auto;\r\n                            max-width: 700px;\r\n                            padding: ${rhythm(2)};\r\n                            padding-top:${rhythm(1.5)};\r\n                        `}\r\n                >\r\n                    <Link to={`/`}>\r\n                        <h3\r\n                            css={css`\r\n                                    margin-bottom:${rhythm(2)};\r\n                                    display:inline-block;\r\n                                    font-style:normal;\r\n                                `}\r\n                        >\r\n                            {data.site.siteMetadata.title}\r\n                        </h3>\r\n                    </Link>\r\n                    <Link\r\n                        to={`/about`}\r\n                        css={css `\r\n                                float:right;\r\n                            `}\r\n                    >\r\n                        About\r\n                    </Link>\r\n                    <Link\r\n                        to={`/tags`}\r\n                        css={css`\r\n                                float:right;\r\n                                margin-right:5px;\r\n                            `}\r\n                    >\r\n                        Tags\r\n                    </Link>\r\n                    <Link\r\n                        to={`/categories`}\r\n                        css={css`\r\n                                float:right;\r\n                                margin-right:5px;\r\n                            `}\r\n                    >\r\n                        Categories\r\n                    </Link>\r\n                    {children}\r\n                </div>\r\n                </>\r\n        )}\r\n    \r\n    />\r\n)","import Typography from \"typography\"\r\nimport kirkhamTheme from \"typography-theme-kirkham\"\r\n\r\nconst typography = new Typography(kirkhamTheme)\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}